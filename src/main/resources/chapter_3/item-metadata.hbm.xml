<?xml version="1.0"?>
<!-- Metadata is declared inside a <code>hibernate-mapping</code> root element. 
	Attributes such as <code>package</code> name and <code>default-access</code> 
	apply to all mappings in this file. You may include as many entity class 
	mappings as you like. -->

<!-- Native XML is mostly used to gain access to special Hibernate features -->
<hibernate-mapping xmlns="http://www.hibernate.org/xsd/orm/hbm"
	package="com.igor.chapter_3" default-access="field">

	<!-- An entity class mapping -->
	<!-- Declaration has to include all mapping details, can't override -->
	<class name="Item">
		<id name="id">
			<generator class="native" />
		</id>
		<property name="name" />
		<property name="auctionEnd" type="timestamp">
			<column name="AUCTION_END" sql-type="datetime(3)" />
		</property>

		<!-- Unmapped fields are transitive! -->

	</class>

	<!-- All metadata is global to the persistent unit. Externalized, native 
		query strings, custome type definitions, auxiliary SQL DDL for particular 
		DBMS product, dynamic persistence context filters, and so on -->

	<!-- Externalized queries -->
	<query name="findItems_HBMXML">select i from Item i</query>

	<!-- Can define native-Hibernate query here, or in package-info.java, or 
		in JPA XML using hints -->
    <query name="findItemsOrderByIdDesc_HBMXML"
           cache-mode="ignore"
           comment="Custom SQL comment in HBMXML"
           fetch-size="50"
           read-only="true"
           timeout="60">
           
        select i from Item i order by i.id desc
    </query>
    
	<!-- Auxiliary schema DDL -->
	<database-object>
		<create>create index ITEM_NAME_IDX on Item(NAME)</create>
		<drop>alter table Item drop index ITEM_NAME_IDX</drop>
	</database-object>

</hibernate-mapping>